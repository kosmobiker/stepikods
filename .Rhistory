for (i in 1:(length(mydata) - 1)) {if(mydata[i+1] > mydata[i]) {good_months <- c(good_months, mydata[i])}}
print(good_months)
vector1 <- as.vector(AirPassengers)
vector2 <- c(vector1[length(vector1)],vector1[-length(vector1)])
diffs <- vector1-vector2
output = vector1[diffs>0]
print(good_months)
mydata <- as.vector(AirPassengers)
good_months <- c()
for (i in 1:(length(mydata) - 1)) {if(mydata[i+1] > mydata[i]) {good_months <- c(good_months, mydata[i])}}
print(length(good_months))
vector1 <- as.vector(AirPassengers)
vector2 <- c(vector1[length(vector1)],vector1[-length(vector1)])
diffs <- vector1-vector2
output = vector1[diffs>0]
print(length(good_months))
mydata <- as.vector(AirPassengers)
good_months <- c()
for (i in 1:(length(mydata) - 1)) {if(mydata[i+1] > mydata[i]) {good_months <- c(good_months, mydata[i])}}
print(length(good_months))
vector1 <- as.vector(AirPassengers)
vector2 <- c(vector1[length(vector1)],vector1[-length(vector1)])
diffs <- vector1-vector2
output = vector1[diffs>0]
print(length(good_months))
mydata <- as.vector(AirPassengers)
good_months <- c()
for (i in 1:(length(mydata) - 1)) {if(mydata[i+1] > mydata[i]) {good_months <- c(good_months, mydata[i])}}
print(good_months)
vector1 <- as.vector(AirPassengers)
vector2 <- c(vector1[length(vector1)],vector1[-length(vector1)])
diffs <- vector1-vector2
output = vector1[diffs>0]
print(good_month))
print(good_month)
mydata <- as.vector(AirPassengers)
good_months <- c()
for (i in 1:(length(mydata) - 1)) {if(mydata[i+1] > mydata[i]) {good_months <- c(good_months, mydata[i])}}
print(good_months)
good_months <- AirPassengers[-1][AirPassengers[-1] > AirPassengers[-144]]
mydata <- as.vector(AirPassengers)
good_months <- c()
for (i in 1:(length(mydata) - 1)) {if(mydata[i+1] > mydata[i]) {good_months <- c(good_months, mydata[i])}}
print(good_months)
good_months <- AirPassengers[-1][AirPassengers[-1] > AirPassengers[-144]]
print(good_months)
mydata <- as.vector(AirPassengers)
good_months <- c()
for (i in 1:(length(mydata) - 1)) {if(mydata[i+1] > mydata[i]) {good_months <- c(good_months, mydata[i])}}
print(good_months)
vector1 <- as.vector(AirPassengers)
vector2 <- c(vector1[length(vector1)],vector1[-length(vector1)])
diffs <- vector1-vector2
output = vector1[diffs>0]
good_months <- output
print(good_months)
mydata <- as.vector(AirPassengers)
good_months <- c()
for (i in 1:(length(mydata) - 1)) {if(mydata[i+1] > mydata[i]) {good_months <- c(good_months, mydata[i+1])}}
print(good_months)
vector1 <- as.vector(AirPassengers)
vector2 <- c(vector1[length(vector1)],vector1[-length(vector1)])
diffs <- vector1-vector2
output = vector1[diffs>0]
good_months <- output
print(good_months)
mydata <- as.vector(AirPassengers)
good_months <- c()
for (i in 1:(length(mydata) - 1)) {if(mydata[i+1] > mydata[i]) {good_months <- c(good_months, mydata[i+1])}}
print(good_months)
mydata <- as.vector(AirPassengers)
moving_average <- numeric(135)
for (i in 1:135) {print(i)}
mydata <- as.vector(AirPassengers)
moving_average <- numeric(135)
for (i in 1:135) moving_average <- mean(mydata[i], mydata[i+1])
print(moving_average)
mydata[1:10]
sum(mydata[1:10])
mean(mydata[1:10])
mydata <- as.vector(AirPassengers)
for (i in 1:135) print(mean(i : (i+10)))
mydata <- as.vector(AirPassengers)
for (i in 1:135) print(mean(mydata[i] : mydata[(i+10)]))
for (i in 1:134) print(mean(mydata[i] : mydata[(i+10)]))
for (i in 1:135) print(mean(mydata[i] : mydata[(i+10)]))
mydata <- as.vector(AirPassengers)
for (i in 1:135) print(mydata[i] : mydata[(i+10)])
for (i in 1:135) print(i, i+10)
mydata <- as.vector(AirPassengers)
for (i in 1:135) print(mydata[i] : mydata[i+10])
for (i in 1:134) print(mydata[i] : mydata[i+10])
for (i in 1:134) print(mean(mydata[i] : mydata[i+10]))
for (i in 1:135) print(mean(mydata[i] : mydata[i+9]))
for (i in 1:134) print(mean(mydata[i] : mydata[i+9]))
for (i in 1:135) print(mean(mydata[i] : mydata[i+9]))
mydata[1:10]
mydata[2:11]
for (i in 1:135) print(mean(mydata[i-1] : mydata[i+10]))
for (i in 1:135) print(i)
for (i in 1:135) print(mean(mydata[i] : mydata[i+9]))
for (i in 1:135) print(sum(mydata[i] : mydata[i+9])/10)
for (i in 1:135) print(i, i+9)
print(2, 7)
for (i in 1:135) print(i) print(i+9)
for (i in 1:135) print(i+9)
for (i in 1:135) print(mean(mydata[i: (i+9)])
for (i in 1:135) print(mean(mydata[i: (i+9)]))
mydata[2: 11]
mean(mydata[2: 11])
mydata <- as.vector(AirPassengers)
for (i in 1:135) print(mean(mydata[i: (i+9)]))
mydata <- as.vector(AirPassengers)
moving_average <- numeric(135)
for (i in 1:135) moving_average <- mean(mydata[i: (i+9)])
print(moving_average)
mydata <- as.vector(AirPassengers)
moving_average <- numeric(135)
for (i in 1:135) moving_average <- c(mean(mydata[i: (i+9)]))
print(moving_average)
mydata <- as.vector(AirPassengers)
moving_average <- numeric(135)
for (i in 1:135) moving_average <- c(moving_average, mean(mydata[i: (i+9)]))
print(moving_average)
mydata <- as.vector(AirPassengers)
moving_average <- c()
for (i in 1:135) moving_average <- c(moving_average, mean(mydata[i: (i+9)]))
print(moving_average)
mydata <- as.vector(AirPassengers)
moving_average <- numeric(135)
for (i in 1:135) moving_average[i] <- mean(mydata[i: (i+9)]))
print(moving_average)
mydata <- as.vector(AirPassengers)
moving_average <- numeric(135)
for (i in 1:135) {moving_average[i] <- mean(mydata[i: (i+9)]))}
print(moving_average)
mydata <- as.vector(AirPassengers)
moving_average <- numeric(135)
for (i in 1:135) {moving_average[i] <- mean(mydata[i: (i+9)])}
print(moving_average)
df <- mtcars
df <- mtcars
str(df)
str(df)
df$vs <- factor(df$vs, labels=c("V", "S"))
str(df)
View(df)
View(df)
df$am <- factor(df$vs, labels=c("Auto", "Manual"))
median(df$mpg)
mean(df$disp)
sd(df$hp)
range(df$cyl)
mean_disp <- mean(df$disp)
mean(df$mpg[df$cyl == 6])
mean(df$mpg[df$cyl==6 & df$vs == 'V'])
df$mpg[df$cyl==6 & df$vs == 'V'])
df$mpg[df$cyl==6 & df$vs == 'V']
sd(df$hp[df$cyl != 3 & df$am == 'Auto'])
df <- mtcars
str(df)
df$vs <- factor(df$vs, labels=c("V", "S"))
df$am <- factor(df$vs, labels=c("Auto", "Manual"))
median(df$mpg)
mean(df$disp)
sd(df$hp)
range(df$cyl)
mean_disp <- mean(df$disp)
mean(df$mpg[df$cyl == 6])
mean(df$mpg[df$cyl==6 & df$vs == 'V'])
df$mpg[df$cyl==6 & df$vs == 'V']
sd(df$hp[df$cyl != 3 & df$am == 'Auto'])
sd(df$hp[df$cyl != 3 & df$am == 'Auto'])
mean(df$qsec[df$cyl != 3 & df$mpg > 20])
aggregate(x = df$hp, by = list(df$vs), FUN=mean)
mean_hp_vs = aggregate(x = df$hp, by = list(df$vs), FUN=mean)
colnames(mean_hp_vs) <- c("VS", "Mean HP")
View(mean_hp_vs)
View(mean_hp_vs)
aggregate(hp ~ vs, df, mean)
aggregate(hp ~ vs + am, df, mean)
aggregate(hp ~ vs + am, df, mean)
lala <- aggregate(hp ~ vs + am, df, mean)
View(lala)
aggregate(hp ~ vs + am, df, mean)
View(df)
aggregate(x = df$hp, by = list(df$vs, df$am), FUN=mean)
aggregate(x = df[, -c(8, 9)], by=list(df$am), FUN= mean)
aggregate(x = df[, -c(8, 9)], by=list(df$am), FUN= median)
View(df)
df  <- mtcars
str(df)
df$vs  <- factor(df$vs  , labels = c("V", "S"))
df$am  <- factor(df$am  , labels = c("Auto", "Manual"))
df$vs  <- factor(df$vs  , labels = c("V", "S"))
df$am  <- factor(df$am  , labels = c("Auto", "Manual"))
df  <- mtcars
str(df)
df  <- mtcars
str(df)
df$vs  <- factor(df$vs  , labels = c("V", "S"))
df$am  <- factor(df$am  , labels = c("Auto", "Manual"))
median(df$mpg)
mean(df$disp)
sd(df$hp)
range(df$cyl)
mean_disp  <- mean(df$disp)
mean(df$mpg[df$cyl == 6])
mean(df$mpg[df$cyl == 6 & df$vs == "V"])
sd(df$hp[df$cyl != 3 & df$am == "Auto"])
?aggregate
mean_hp_vs  <- aggregate(x = df$hp, by = list(df$vs), FUN = mean)
colnames(mean_hp_vs)  <- c("VS", "Mean HP")
aggregate(hp ~ vs, df, mean)
aggregate(hp ~ vs + am, df, mean)
aggregate(x = df$hp, by = list (df$vs, df$am), FUN = mean)
aggregate(x = df[,-c(8,9)], by = list(df$am), FUN = median)
aggregate(x = df[, -c(8, 9)], by=list(df$am), FUN= median)
aggregate(cbind(mpg, disp) ~ am + vs, df, sd)
my_stats  <- aggregate(cbind(mpg, disp) ~ am + vs, df, sd)
df <- mtcars
str(df)
df$vs <- factor(df$vs, labels=c("V", "S"))
df$am <- factor(df$vs, labels=c("Auto", "Manual"))
median(df$mpg)
mean(df$disp)
sd(df$hp)
range(df$cyl)
mean_disp <- mean(df$disp)
mean(df$mpg[df$cyl == 6])
mean(df$mpg[df$cyl==6 & df$vs == 'V'])
df$mpg[df$cyl==6 & df$vs == 'V']
sd(df$hp[df$cyl != 3 & df$am == 'Auto'])
mean(df$qsec[df$cyl != 3 & df$mpg > 20])
mean_hp_vs = aggregate(x = df$hp, by = list(df$vs), FUN=mean)
colnames(mean_hp_vs) <- c("VS", "Mean HP")
aggregate(hp ~ vs, df, mean)
aggregate(hp ~ vs + am, df, mean)
aggregate(x = df$hp, by = list(df$vs, df$am), FUN=mean)
aggregate(x = df[, -c(8, 9)], by=list(df$am), FUN= median)
knitr::opts_chunk$set(echo = TRUE)
library(knitr)
library(ggplot2)
library(plyr)
library(dplyr)
library(corrplot)
library(caret)
install.packages("caret")
library(caret)
install.packages("rlang")
install.packages("rlang")
install.packages("rlang")
install.packages("rlang")
install.packages("caret")
knitr::opts_chunk$set(echo = TRUE)
library(caret)
library(gridExtra)
library(scales)
library(Rmisc)
library(ggrepel)
library(randomForest)
library(psych)
library(xgboost)
install.packages(c("caret", "xgboost"))
library(knitr)
library(ggplot2)
library(plyr)
library(dplyr)
library(corrplot)
library(caret)
library(gridExtra)
library(scales)
library(Rmisc)
library(ggrepel)
library(randomForest)
library(psych)
library(xgboost)
install.packages("xgboost")
library(xgboost)
knitr::opts_chunk$set(echo = TRUE)
library(knitr)
library(knitr)
library(ggplot2)
library(knitr)
library(ggplot2)
library(plyr)
library(dplyr)
library(corrplot)
library(caret)
library(ggrepel)
library(randomForest)
library(psych)
library(xgboost)
library(knitr)
library(ggplot2)
library(plyr)
library(dplyr)
library(corrplot)
library(caret)
library(caret)
library(caret)
library(gridExtra)
library(scales)
library(Rmisc)
library(ggrepel)
library(randomForest)
library(psych)
library(xgboost)
library(knitr)
library(ggplot2)
library(plyr)
library(dplyr)
library(corrplot)
library(caret)
train <- read.csv("../../data/house_train.csv", stringsAsFactors = F)
test <- read.csv("./../data/house_test.csv", stringsAsFactors = F)
test <- read.csv("../../data/house_test.csv", stringsAsFactors = F)
View(train)
install.packages("caret")
f = function(x)
{
sum(x^2)
}
SA = function(x, f, t, alpha, delta, maxIt)
{
n = length(x)
out = list()
out$f_hist = rep(NA, maxIt+1)
out$f_hist[1] = f(x)
out$t_hist = rep(NA, maxIt+1)
out$t_hist[1] = t
out$x_hist = matrix(NA, maxIt+1, n)
out$x_hist[1,] = x
for (i in 1 : maxIt)
{
x_c = x + runif(n, min = -delta, delta)
A = min(1, exp(-(f(x_c) - f(x))/t))
if (runif(1) < A)
{
x = x_c
}
t = alpha * t
out$f_hist[i+1] = f(x)
out$t_hist[i+1] = t
out$x_hist[i+1,] = x
}
out$x_opt = x
return(out)
}
x = c(10, 10)
t = 100
alpha = 0.995
delta = 0.1
maxIt = 2000
resu = SA(x, f, t, alpha, delta, maxIt)
plot(resu$f_hist, type = "l")
lines(resu$t_hist * 2, type = "l", col = "red")
plot(resu$x_hist[,1], resu$x_hist[,2])
lines(10,10, col = "red", type = "p")
df <- mtcars
df$vs <- factor(df$vs, labels = c("V", "S"))
df$am <- factor(df$am, labels = c("Auto", "Manual"))
df <- mtcars
df$vs <- factor(df$vs, labels = c("V", "S"))
df$am <- factor(df$am, labels = c("Auto", "Manual"))
View(df)
View(df)
hist(df$mpg)
hist(df$mpg, breaks = 25)
boxplot(mpg ~ am, df)
plot(df$mpg, df$hp)
library(ggplot2)
ggplot(data=df, aes(x = mpg)) + geom_histogram()
ggplot(data=df, aes(x = mpg)) + geom_histogram(fill= 'white', col = 'green')
ggplot(data=df, aes(x = mpg)) + geom_histogram(fill= 'white', col = 'green', binwidth=30)
ggplot(data=df, aes(x = mpg)) + geom_histogram(fill= 'white', col = 'green', binwidth=2)
ggplot(data=df, aes(x = mpg)) + geom_dotplot(fill= 'white', col = 'green', binwidth=2)
ggplot(data=df, aes(x = mpg, fill = am)) + geom_dotplot(fill= 'white', col = 'green', binwidth=2)
ggplot(data=df, aes(x = mpg, fill = am)) + geom_dotplot()
ggplot(df, aes(x = am, y = hp)) + geom_boxplot()
ggplot(df, aes(x = am, y = hp, col = vs)) + geom_boxplot()
ggplot(df, aes(x = mpg, y = hp)) + geom_point()
ggplot(df, aes(x = mpg, y = hp)) + geom_point(size=5)
ggplot(df, aes(x = mpg, y = hp)) + geom_point(size=2)
ggplot(df, aes(x = mpg, y = hp, col = vs)) + geom_point(size=2)
ggplot(df, aes(x = mpg, y = hp, col = vs, size = qsec)) + geom_point(size=2)
ggplot(df, aes(x = mpg, y = hp, col = vs, size = qsec)) + geom_point()
df2 <- airquality
View(df2)
ggplot(df2, aes(x = month, y = ozone)) + geom_boxplot()
ggplot(df2, aes(x = Month, y = Ozone)) + geom_boxplot()
ggplot(df2, aes(x = Month, y = Ozone)) + geom_boxplot(size=1)
ggplot(df2, aes(x = Month, y = Ozone)) + geom_boxplot(size=10)
ggplot(df2, aes(x = Month, y = Ozone)) + geom_boxplot(size=0.01)
ggplot(df2, aes(x = Month, y = Ozone)) + geom_boxplot(size=1)
ggplot(df2, aes(x = Month, y = Ozone)) + geom_boxplot()
ggplot(df2, aes(x = df ~ Month, y = Ozone)) + geom_boxplot()
ggplot(df2, aes(x = Month, y = Ozone)) + geom_boxplot()
ggplot(df2, aes(x = Month, y = Ozone, group=Month)) + geom_boxplot()
ggplot(df, x = mpg, y = disp, col = hp)
ggplot(df, x = mpg, y = disp, col = hp) + geom_point()
ggplot(df, aes(x = mpg, y = disp, col = hp)) + geom_point()
ggplot(iris, aes(Sepal.Length)) + geom_histogram(aes(col = Species))
ggplot(iris, aes(Sepal.Length)) + geom_histogram(fill = Species)
ggplot(iris, aes(Sepal.Length)) + geom_histogram(fill = Species)
ggplot(iris, aes(Sepal.Length)) + geom_histogram(aes(col = Species))
ggplot(iris, aes(Sepal.Length)) + geom_histogram(fill = Species)
ggplot(iris, aes(Sepal.Length)) + geom_histogram(aes(fill = Species))
ggplot(iris, aes(Sepal.Length, fill = Species)) + geom_histogram()
ggplot(iris, aes(Sepal.Length)) + geom_histogram(aes(col = Species))
ggplot(iris, aes(Sepal.Length)) + geom_histogram(aes(fill = Species))
ggplot(iris, aes(Sepal.Length, col = Species)) + geom_histogram()
ggplot(iris, aes(Sepal.Length, fill = Species)) + geom_histogram()
ggplot(iris, aes(Sepal.Length)) + geom_histogram(fill = Species
ggplot(iris, aes(Sepal.Length, col = Species)) + geom_histogram()
ggplot(iris, aes(Sepal.Length)) + geom_histogram(aes(col = Species))
ggplot(iris, aes(Sepal.Length)) + geom_histogram(aes(fill = Species))
ggplot(iris, aes(Sepal.Length)) + geom_histogram(fill = Species)
ggplot(iris, aes(Sepal.Length, fill = Species)) + geom_histogram()
ggplot(iris, aes(Sepal.Length, col = Species)) + geom_histogram()
ggplot(iris, aes(Sepal.Length)) + geom_histogram(aes(col = Species))
ggplot(iris, aes(Sepal.Length, fill = Species)) + geom_histogram()
ggplot(iris, aes(Sepal.Length)) + geom_histogram(fill = Species)
ggplot(iris, aes(Sepal.Length, col = Species)) + geom_histogram()
ggplot(iris, aes(Sepal.Length)) + geom_histogram(aes(fill = Species))
getwd()
mean(10^6:10^9)
df <- read.csv('..\..\data\vgsales.csv')
df <- read.csv('../../data/vgsales.csv')
df <- read.csv('../../data/vgsales.csv')
df <- read.csv('~/Documents/StepikODS/data/vgsales.csv')
View(df)
View(df)
df.names()
df.colnames()
setwd('~/Documents/StepikODS/')
df <- read.csv('data/vgsales.csv')
df.colnames()
df
summary(df)
df$total = df$NA_Sales + df$EU_Sales + df$JP_Sales + df$Other_Sales
setwd('~/Documents/StepikODS/')
df <- read.csv('data/vgsales.csv')
byyear <- group_by(df$Year)
group_by(df$Year)
ggplot2(df, x = df$Year, y=df$Global_Sales)
library(ggplot2)
ggplot2(df, x = df$Year, y=df$Global_Sales)
ggplot2(df, x = df$Year, y=df$Global_Sales) + geom_histogram()
library(ggplot2)
ggplot2(df, x = df$Year, y=df$Global_Sales) + geom_histogram()
ggplot(df, x = df$Year, y=df$Global_Sales) + geom_histogram()
ggplot(df, x = df$Year, y=df$Global_Sales)
ggplot2(df, x = df$Year, y=df$Global_Sales)
ggplot2?
library(ggplot2)
library(ggplot2)
ggplot(df, x=df$Year, y=df$Global_Sales)
ggplot(df, aes(x=df$Year, y=df$Global_Sales)) + geom_histogram()
ggplot(df, aes(x=Year, y=Global_Sales)) + geom_histogram()
ggplot(df, aes(x=Year, y=Global_Sales)) + geom_histogram()
ggplot(df, aes(x=df$Genre)) + geom_histogram()
df <- read.csv('data/vgsales.csv')
library(ggplot2)
ggplot(df, aes(x=df$Genre)) + geom_histogram()
ggplot(df, aes(x=Genre)) + geom_histogram()
ggplot(df, aes(x=Genre)) + geom_histogram()
setwd('~/Documents/StepikODS/')
df <- read.csv('data/vgsales.csv')
library(ggplot2)
ggplot(df, aes(x=Genre)) + geom_histogram()
ggplot(df, aes(x=Genre)
ggplot(df)
hist(df$Genre)
hist(df$Global_Sales)
df$G
df$Genre
df$<Year
df$Year
ggplot(df, aes(x=Year)) + geom_histogram()
ggplot(df, aes(x=Genre)) + geom_histogram()
ggplot(df, aes(x=EU_sales)) + geom_histogram()
ggplot(df, aes(x=EU_Sales)) + geom_histogram()
ggplot(df, aes(x=Year, y=EU_Sales)) + geom_histogram()
setwd('~/Documents/StepikODS/')
df <- read.csv('data/vgsales.csv')
data$Rank <- NULL
ggplot(df, aes(Year)) +
geom_bar(fill = "blue") +
mytheme_1() +
ggtitle("Video Game Releases by Year")
ggplot(df, aes(Year)) +
geom_bar(fill = "blue") +
ggtitle("Video Game Releases by Year")
ggplot(revenue_by_year, aes(Year, Revenue)) +
geom_bar(fill = "maroon", stat = "identity") +
ggtitle("Video Game Revenue by Year")
revenue_by_year <- videogamesales %>%
group_by(Year) %>%
summarize(Revenue = sum(Global_Sales))
ggplot(revenue_by_year, aes(Year, Revenue)) +
geom_bar(fill = "maroon", stat = "identity") +
ggtitle("Video Game Revenue by Year")
revenue_by_year <- videogamesales %>%
group_by(Year) %>%
summarize(Revenue = sum(Global_Sales))
revenue_by_year <- df %>%
group_by(Year) %>%
summarize(Revenue = sum(Global_Sales))
ggplot(revenue_by_year, aes(Year, Revenue)) +
geom_bar(fill = "maroon", stat = "identity") +
ggtitle("Video Game Revenue by Year")
